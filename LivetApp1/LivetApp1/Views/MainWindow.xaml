<Window x:Class="LivetApp1.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:v="clr-namespace:LivetApp1.Views"
        xmlns:vm="clr-namespace:LivetApp1.ViewModels"
        Title="MainWindow" Height="350" Width="525">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <i:Interaction.Triggers>

        <!--Viewに特別な要件が存在しない限りは、トリガーやアクションの自作にこだわらず積極的にコードビハインドを使いましょう -->
        <!--Viewのコードビハインドは、基本的にView内で完結するロジックとViewModelからのイベントの受信(専用リスナを使用する)に限るとトラブルが少なくなります -->
        <!--Livet1.1からはコードビハインドでViewModelのイベントを受信するためのWeakEventLisnterサポートが追加されています -->

        <!--WindowのContentRenderedイベントのタイミングでViewModelのInitializeメソッドが呼ばれます-->
        <i:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodTarget="{Binding}" MethodName="Initialize"/>
        </i:EventTrigger>

        <!--Windowが閉じたタイミングでViewModelのDisposeメソッドが呼ばれます-->
        <i:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction/>
        </i:EventTrigger>

        <!--WindowのCloseキャンセル処理に対応する場合は、WindowCloseCancelBehaviorの使用を検討してください-->
        <!-- MainWindowViewModel からの TransitionMessage("ShowLogon") を受け取とってログオン画面を表示する処理。 -->
        <l:InteractionMessageTrigger MessageKey="ShowLogon" Messenger="{Binding Messenger}">
            <l:TransitionInteractionMessageAction/>
        </l:InteractionMessageTrigger>

        <l:InteractionMessageTrigger MessageKey="Show" Messenger="{Binding Messenger}"> 
            <l:TransitionInteractionMessageAction/>
        </l:InteractionMessageTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="221*"/>
            <ColumnDefinition Width="56*"/>
            <ColumnDefinition Width="65*"/>
            <ColumnDefinition Width="175*"/>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.ColumnSpan="4">
            <TextBox Text="{Binding MyMessage}"/>
            <TextBox Text="{Binding MyDate}"/>
            <Button Content="Test" Command="{Binding TestCommand}"/>
            <Button Content="Test2" Command="{Binding Test2Command}" CommandParameter="{Binding MyMessage}"/>
            <ComboBox>
                <Label Content="1ban"/>
                <Label Content="2ban"/>
                <Label Content="3ban"/>
            </ComboBox>
        </StackPanel>
    </Grid>
</Window>
